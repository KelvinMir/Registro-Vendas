{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelvi\\\\Downloads\\\\Joias\\\\tabela-vendas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sales, setSales] = useState([]);\n  const [formData, setFormData] = useState({\n    valueSold: '',\n    installments: '',\n    costValue: ''\n  });\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth() + 1); // mês atual\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear()); // ano atual\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newSale = {\n      date: new Date(),\n      // Registro da data completa\n      valueSold: parseFloat(formData.valueSold),\n      installments: parseInt(formData.installments),\n      costValue: parseFloat(formData.costValue),\n      installmentValues: Array(parseInt(formData.installments)).fill(parseFloat(formData.valueSold) / parseInt(formData.installments)) // Distribuindo o valor das parcelas\n    };\n    setSales([...sales, newSale]);\n    setFormData({\n      valueSold: '',\n      installments: '',\n      costValue: ''\n    });\n  };\n  const handleInstallmentChange = (saleIndex, installmentIndex, newValue) => {\n    const updatedSales = [...sales];\n    updatedSales[saleIndex].installmentValues[installmentIndex] = parseFloat(newValue);\n    setSales(updatedSales);\n  };\n\n  // Calcula o total a receber no mês atual\n  const getTotalToReceive = () => {\n    return sales.reduce((total, sale) => {\n      return total + sale.installmentValues.reduce((subtotal, installmentValue, index) => {\n        const saleMonth = new Date(sale.date).getMonth() + 1; // Mês da venda\n        const saleYear = new Date(sale.date).getFullYear(); // Ano da venda\n        const installmentMonth = saleMonth + index;\n        const installmentYear = saleYear + Math.floor((saleMonth - 1 + index) / 12);\n        const adjustedInstallmentMonth = (installmentMonth - 1) % 12 + 1; // Ajusta o mês caso seja maior que 12\n        if (adjustedInstallmentMonth === currentMonth && installmentYear === currentYear) {\n          return subtotal + installmentValue;\n        }\n        return subtotal;\n      }, 0);\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registro de Vendas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Formulario1\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"buyer-name\",\n            children: \"Comprador:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"buyer-name\",\n            placeholder: \"Digite o nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Valor Vendido:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"valueSold\",\n            value: formData.valueSold,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Parcelas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"installments\",\n            value: formData.installments,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Valor de Custo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"costValue\",\n            value: formData.costValue,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Registrar Venda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vendas Registradas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor Vendido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Parcelas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor de Custo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sales.map((sale, saleIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: sale.date.toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sale.valueSold\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sale.installmentValues.map((installmentValue, installmentIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Parcela \", installmentIndex + 1, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: installmentValue,\n                onChange: e => handleInstallmentChange(saleIndex, installmentIndex, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)]\n            }, installmentIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sale.costValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, saleIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Valores a Receber no M\\xEAs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"M\\xEAs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: currentMonth,\n        onChange: e => setCurrentMonth(parseInt(e.target.value)),\n        min: \"1\",\n        max: \"12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ano:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: currentYear,\n        onChange: e => setCurrentYear(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Footer\",\n      children: [\"Total a Receber: R$\", getTotalToReceive().toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VQASZOKd3Soh40VSc6qDCn/A/rE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","sales","setSales","formData","setFormData","valueSold","installments","costValue","currentMonth","setCurrentMonth","Date","getMonth","currentYear","setCurrentYear","getFullYear","handleInputChange","e","name","value","target","handleSubmit","preventDefault","newSale","date","parseFloat","parseInt","installmentValues","Array","fill","handleInstallmentChange","saleIndex","installmentIndex","newValue","updatedSales","getTotalToReceive","reduce","total","sale","subtotal","installmentValue","index","saleMonth","saleYear","installmentMonth","installmentYear","Math","floor","adjustedInstallmentMonth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","type","id","placeholder","onChange","required","map","toLocaleDateString","min","max","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/kelvi/Downloads/Joias/tabela-vendas/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\nfunction App() {\n  const [sales, setSales] = useState([]);\n  const [formData, setFormData] = useState({\n    valueSold: '',\n    installments: '',\n    costValue: ''\n  });\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth() + 1); // mês atual\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear()); // ano atual\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newSale = {\n      date: new Date(),  // Registro da data completa\n      valueSold: parseFloat(formData.valueSold),\n      installments: parseInt(formData.installments),\n      costValue: parseFloat(formData.costValue),\n      installmentValues: Array(parseInt(formData.installments)).fill(parseFloat(formData.valueSold) / parseInt(formData.installments)) // Distribuindo o valor das parcelas\n    };\n    setSales([...sales, newSale]);\n    setFormData({ valueSold: '', installments: '', costValue: '' });\n  };\n\n  const handleInstallmentChange = (saleIndex, installmentIndex, newValue) => {\n    const updatedSales = [...sales];\n    updatedSales[saleIndex].installmentValues[installmentIndex] = parseFloat(newValue);\n    setSales(updatedSales);\n  };\n\n  // Calcula o total a receber no mês atual\n  const getTotalToReceive = () => {\n    return sales.reduce((total, sale) => {\n      return total + sale.installmentValues.reduce((subtotal, installmentValue, index) => {\n        const saleMonth = new Date(sale.date).getMonth() + 1; // Mês da venda\n        const saleYear = new Date(sale.date).getFullYear(); // Ano da venda\n        const installmentMonth = saleMonth + index;\n        const installmentYear = saleYear + Math.floor((saleMonth - 1 + index) / 12);\n        const adjustedInstallmentMonth = ((installmentMonth - 1) % 12) + 1; // Ajusta o mês caso seja maior que 12\n        if (adjustedInstallmentMonth === currentMonth && installmentYear === currentYear) {\n          return subtotal + installmentValue;\n        }\n        return subtotal;\n      }, 0);\n    }, 0);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className='Left'>\n        <h1>Registro de Vendas</h1>\n        <form className='Formulario1' onSubmit={handleSubmit}>\n          <div>\n            <label for=\"buyer-name\">Comprador:</label>\n            <input type=\"text\" id=\"buyer-name\" placeholder=\"Digite o nome\" />\n          </div>\n          <div>\n            <label>Valor Vendido:</label>\n            <input\n              type=\"number\"\n              name=\"valueSold\"\n              value={formData.valueSold}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          <div>\n            <label>Parcelas:</label>\n            <input\n              type=\"number\"\n              name=\"installments\"\n              value={formData.installments}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          <div>\n            <label>Valor de Custo:</label>\n            <input\n              type=\"number\"\n              name=\"costValue\"\n              value={formData.costValue}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          <button type=\"submit\">Registrar Venda</button>\n        </form>\n      </div>\n      \n\n      <h2>Vendas Registradas</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Data</th>\n            <th>Valor Vendido</th>\n            <th>Parcelas</th>\n            <th>Valor de Custo</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sales.map((sale, saleIndex) => (\n            <tr key={saleIndex}>\n              <td>{sale.date.toLocaleDateString()}</td>\n              <td>{sale.valueSold}</td>\n              <td>\n                {sale.installmentValues.map((installmentValue, installmentIndex) => (\n                  <div key={installmentIndex}>\n                    <label>Parcela {installmentIndex + 1}: </label>\n                    <input\n                      type=\"number\"\n                      value={installmentValue}\n                      onChange={(e) => handleInstallmentChange(saleIndex, installmentIndex, e.target.value)}\n                    />\n                  </div>\n                ))}\n              </td>\n              <td>{sale.costValue}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2>Valores a Receber no Mês</h2>\n      <div>\n        <label>Mês:</label>\n        <input\n          type=\"number\"\n          value={currentMonth}\n          onChange={(e) => setCurrentMonth(parseInt(e.target.value))}\n          min=\"1\"\n          max=\"12\"\n        />\n        <label>Ano:</label>\n        <input\n          type=\"number\"\n          value={currentYear}\n          onChange={(e) => setCurrentYear(parseInt(e.target.value))}\n        />\n      </div>\n      <h3 className='Footer'>Total a Receber: R${getTotalToReceive().toFixed(2)}</h3>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAIc,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAIc,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1E,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCf,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACc,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAE,IAAIb,IAAI,CAAC,CAAC;MAAG;MACnBL,SAAS,EAAEmB,UAAU,CAACrB,QAAQ,CAACE,SAAS,CAAC;MACzCC,YAAY,EAAEmB,QAAQ,CAACtB,QAAQ,CAACG,YAAY,CAAC;MAC7CC,SAAS,EAAEiB,UAAU,CAACrB,QAAQ,CAACI,SAAS,CAAC;MACzCmB,iBAAiB,EAAEC,KAAK,CAACF,QAAQ,CAACtB,QAAQ,CAACG,YAAY,CAAC,CAAC,CAACsB,IAAI,CAACJ,UAAU,CAACrB,QAAQ,CAACE,SAAS,CAAC,GAAGoB,QAAQ,CAACtB,QAAQ,CAACG,YAAY,CAAC,CAAC,CAAC;IACnI,CAAC;IACDJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEqB,OAAO,CAAC,CAAC;IAC7BlB,WAAW,CAAC;MAAEC,SAAS,EAAE,EAAE;MAAEC,YAAY,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAC,CAAC;EACjE,CAAC;EAED,MAAMsB,uBAAuB,GAAGA,CAACC,SAAS,EAAEC,gBAAgB,EAAEC,QAAQ,KAAK;IACzE,MAAMC,YAAY,GAAG,CAAC,GAAGhC,KAAK,CAAC;IAC/BgC,YAAY,CAACH,SAAS,CAAC,CAACJ,iBAAiB,CAACK,gBAAgB,CAAC,GAAGP,UAAU,CAACQ,QAAQ,CAAC;IAClF9B,QAAQ,CAAC+B,YAAY,CAAC;EACxB,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAOjC,KAAK,CAACkC,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAK;MACnC,OAAOD,KAAK,GAAGC,IAAI,CAACX,iBAAiB,CAACS,MAAM,CAAC,CAACG,QAAQ,EAAEC,gBAAgB,EAAEC,KAAK,KAAK;QAClF,MAAMC,SAAS,GAAG,IAAI/B,IAAI,CAAC2B,IAAI,CAACd,IAAI,CAAC,CAACZ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACtD,MAAM+B,QAAQ,GAAG,IAAIhC,IAAI,CAAC2B,IAAI,CAACd,IAAI,CAAC,CAACT,WAAW,CAAC,CAAC,CAAC,CAAC;QACpD,MAAM6B,gBAAgB,GAAGF,SAAS,GAAGD,KAAK;QAC1C,MAAMI,eAAe,GAAGF,QAAQ,GAAGG,IAAI,CAACC,KAAK,CAAC,CAACL,SAAS,GAAG,CAAC,GAAGD,KAAK,IAAI,EAAE,CAAC;QAC3E,MAAMO,wBAAwB,GAAI,CAACJ,gBAAgB,GAAG,CAAC,IAAI,EAAE,GAAI,CAAC,CAAC,CAAC;QACpE,IAAII,wBAAwB,KAAKvC,YAAY,IAAIoC,eAAe,KAAKhC,WAAW,EAAE;UAChF,OAAO0B,QAAQ,GAAGC,gBAAgB;QACpC;QACA,OAAOD,QAAQ;MACjB,CAAC,EAAE,CAAC,CAAC;IACP,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,oBACExC,OAAA;IAAKkD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnD,OAAA;MAAKkD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBnD,OAAA;QAAAmD,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BvD,OAAA;QAAMkD,SAAS,EAAC,aAAa;QAACM,QAAQ,EAAElC,YAAa;QAAA6B,QAAA,gBACnDnD,OAAA;UAAAmD,QAAA,gBACEnD,OAAA;YAAOyD,GAAG,EAAC,YAAY;YAAAN,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1CvD,OAAA;YAAO0D,IAAI,EAAC,MAAM;YAACC,EAAE,EAAC,YAAY;YAACC,WAAW,EAAC;UAAe;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,eACNvD,OAAA;UAAAmD,QAAA,gBACEnD,OAAA;YAAAmD,QAAA,EAAO;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7BvD,OAAA;YACE0D,IAAI,EAAC,QAAQ;YACbvC,IAAI,EAAC,WAAW;YAChBC,KAAK,EAAEf,QAAQ,CAACE,SAAU;YAC1BsD,QAAQ,EAAE5C,iBAAkB;YAC5B6C,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNvD,OAAA;UAAAmD,QAAA,gBACEnD,OAAA;YAAAmD,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBvD,OAAA;YACE0D,IAAI,EAAC,QAAQ;YACbvC,IAAI,EAAC,cAAc;YACnBC,KAAK,EAAEf,QAAQ,CAACG,YAAa;YAC7BqD,QAAQ,EAAE5C,iBAAkB;YAC5B6C,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNvD,OAAA;UAAAmD,QAAA,gBACEnD,OAAA;YAAAmD,QAAA,EAAO;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9BvD,OAAA;YACE0D,IAAI,EAAC,QAAQ;YACbvC,IAAI,EAAC,WAAW;YAChBC,KAAK,EAAEf,QAAQ,CAACI,SAAU;YAC1BoD,QAAQ,EAAE5C,iBAAkB;YAC5B6C,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNvD,OAAA;UAAQ0D,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGNvD,OAAA;MAAAmD,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BvD,OAAA;MAAAmD,QAAA,gBACEnD,OAAA;QAAAmD,QAAA,eACEnD,OAAA;UAAAmD,QAAA,gBACEnD,OAAA;YAAAmD,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbvD,OAAA;YAAAmD,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBvD,OAAA;YAAAmD,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBvD,OAAA;YAAAmD,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRvD,OAAA;QAAAmD,QAAA,EACGhD,KAAK,CAAC4D,GAAG,CAAC,CAACxB,IAAI,EAAEP,SAAS,kBACzBhC,OAAA;UAAAmD,QAAA,gBACEnD,OAAA;YAAAmD,QAAA,EAAKZ,IAAI,CAACd,IAAI,CAACuC,kBAAkB,CAAC;UAAC;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzCvD,OAAA;YAAAmD,QAAA,EAAKZ,IAAI,CAAChC;UAAS;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBvD,OAAA;YAAAmD,QAAA,EACGZ,IAAI,CAACX,iBAAiB,CAACmC,GAAG,CAAC,CAACtB,gBAAgB,EAAER,gBAAgB,kBAC7DjC,OAAA;cAAAmD,QAAA,gBACEnD,OAAA;gBAAAmD,QAAA,GAAO,UAAQ,EAAClB,gBAAgB,GAAG,CAAC,EAAC,IAAE;cAAA;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC/CvD,OAAA;gBACE0D,IAAI,EAAC,QAAQ;gBACbtC,KAAK,EAAEqB,gBAAiB;gBACxBoB,QAAQ,EAAG3C,CAAC,IAAKa,uBAAuB,CAACC,SAAS,EAAEC,gBAAgB,EAAEf,CAAC,CAACG,MAAM,CAACD,KAAK;cAAE;gBAAAgC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF,CAAC;YAAA,GANMtB,gBAAgB;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOrB,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLvD,OAAA;YAAAmD,QAAA,EAAKZ,IAAI,CAAC9B;UAAS;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAflBvB,SAAS;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAERvD,OAAA;MAAAmD,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCvD,OAAA;MAAAmD,QAAA,gBACEnD,OAAA;QAAAmD,QAAA,EAAO;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnBvD,OAAA;QACE0D,IAAI,EAAC,QAAQ;QACbtC,KAAK,EAAEV,YAAa;QACpBmD,QAAQ,EAAG3C,CAAC,IAAKP,eAAe,CAACgB,QAAQ,CAACT,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC,CAAE;QAC3D6C,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC;MAAI;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFvD,OAAA;QAAAmD,QAAA,EAAO;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnBvD,OAAA;QACE0D,IAAI,EAAC,QAAQ;QACbtC,KAAK,EAAEN,WAAY;QACnB+C,QAAQ,EAAG3C,CAAC,IAAKH,cAAc,CAACY,QAAQ,CAACT,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC;MAAE;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvD,OAAA;MAAIkD,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,qBAAmB,EAACf,iBAAiB,CAAC,CAAC,CAAC+B,OAAO,CAAC,CAAC,CAAC;IAAA;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEV;AAACrD,EAAA,CAvJQD,GAAG;AAAAmE,EAAA,GAAHnE,GAAG;AAyJZ,eAAeA,GAAG;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}